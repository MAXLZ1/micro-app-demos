{"version":3,"file":"static/js/997.c6977199.chunk.js","mappings":"2MAGaA,EAAoCC,EAAAA,GACpCC,EAAkDC,EAAAA,E,oJCsC3DC,E,gIArCIC,EAAkBC,EAAAA,EAAAA,SAARC,EAAQD,EAAAA,EAAAA,IAEbE,EAAeC,kEACfC,EAAeD,kEAEtBE,EAA4B,CAChCC,QAAS,CACPC,KAAM,iBACNC,IAAKN,EACLO,WAAY,YAEdC,QAAS,CACPH,KAAM,iBACNC,IAAKJ,EACLK,WAAY,aAIVE,EAAU,CACd,CACEJ,KAAM,UACNK,KAAM,UACNC,SAAU,CACR,CAAEN,KAAM,+CAAkBK,KAAM,gCAChC,CAAEL,KAAM,iEAAqBK,KAAM,6BAGvC,CACEL,KAAM,UACNK,KAAM,UACNC,SAAW,CACT,CAAEN,KAAM,+CAAkBK,KAAM,gCAChC,CAAEL,KAAM,iEAAqBK,KAAM,8BAOrCE,OAAOC,SACTjB,EAASgB,OAAOC,OAAOC,MAAMlB,QAG/B,IAAMkB,EAAQ,CAAElB,OAAAA,GAYD,SAASmB,IACtB,IAAMC,GAAOtB,EAAAA,EAAAA,IAAe,SAAAuB,GAAK,OAAIA,EAAMD,KAAKA,IAAf,IACjC,GAAkCE,EAAAA,EAAAA,UAA6C,MAA/E,eAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OACE,+BACE,qBAAOC,KAAM,GAAIC,MAAO,CAAEC,MAAO,QAASC,UAAU,WAApD,WACE,oBAAOC,QAAQ,0IAAsCC,KAAK,aAC1D,wBACE,mBAAWC,MAAM,qEAAjB,UACE,cACEL,MAAO,CAAEC,MAAO,SAChBK,cAAc,QACdnB,QAASA,EACToB,WAAY,CAACF,MAAO,OAAQG,MAAO,QACnCC,SA1BS,SAACD,GACpB,cAAqBA,EAArB,GAAOzB,EAAP,KAAaK,EAAb,KACMsB,EAAM7B,EAAKE,GACb2B,GACFZ,GAAa,iBAAO,CAClBf,KAAM2B,EAAI3B,KACVC,IAAK0B,EAAI1B,IAAMI,EAFJ,GAKhB,QAqBMS,IAAa,SAAC,KAAD,kBAAgBA,GAAhB,IAA2BL,MAAOA,EAAOmB,WAnB7D,WACElC,EAAImC,MAAM,aAAc,CAAElB,KAAAA,GAC3B,SAqBF,CAhDDmB,OAAOC,OAAOjC,GAAMkC,SAAQ,SAAAC,GAC1BzC,EAAS,CACPQ,KAAMiC,EAAKjC,KACXkC,MAAO,CAELC,IAAKF,EAAKhC,MAGf,G","sources":["stores/storeHooks.ts","views/MicroAppView/index.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useAppSelector } from '@/stores/storeHooks'\nimport { Alert, Cascader, Form, Space } from 'antd'\nimport { useState } from 'react'\nimport WujieReact from \"wujie-react\"\n\nconst { setupApp, bus } = WujieReact\n\nexport const vue2AppEntry = process.env.REACT_APP_VUE2_CHILD_PUBLIC_PATH\nexport const viteAppEntry = process.env.REACT_APP_VITE_CHILD_PUBLIC_PATH\n\nconst apps: Record<string, any> = {\n  vue2App: {\n    name: 'vue2AppOfReact',\n    url: vue2AppEntry,\n    activeRule: '/vue2App',\n  },\n  viteApp: {\n    name: 'viteAppOfReact',\n    url: viteAppEntry,\n    activeRule: '/viteApp',\n  },\n}\n\nconst options = [\n  {\n    name: 'vue2App',\n    path: 'vue2App',\n    children: [\n      { name: 'vue2App-通信测试页面', path: '#/vue2App/communication-test' },\n      { name: 'vue2App-子应用跳转测试页面', path: '#/vue2App/navigate-view' },\n    ]\n  },\n  {\n    name: 'viteApp',\n    path: 'viteApp',\n    children:  [\n      { name: 'viteApp-通信测试页面', path: '#/viteApp/communication-test' },\n      { name: 'viteApp-子应用跳转测试页面', path: '#/viteApp/navigate-view' },\n    ]\n  }\n]\n\nlet router: any | undefined\n\nif (window.$wujie) {\n  router = window.$wujie.props.router\n}\n\nconst props = { router }\n\nObject.values(apps).forEach(item => {\n  setupApp({\n    name: item.name,\n    attrs: {\n      // 修改iframe src attr，防止github pages csp报错\n      src: item.url,\n    }\n  })\n})\n\nexport default function MicroAppView() {\n  const user = useAppSelector(state => state.user.user)\n  const [microInfo, setMicroInfo] = useState<{name: string, url: string} | null>(null)\n\n  const handleChange = (value: any) => {\n    const [name, path] = value\n    const app = apps[name]\n    if (app) {\n      setMicroInfo(() => ({\n        name: app.name,\n        url: app.url + path\n      }))\n    }\n  }\n\n  function afterMount() {\n    bus.$emit('changeUser', { user })\n  }\n\n  return (\n    <>\n      <Space size={20} style={{ width: '100%'}} direction=\"vertical\">\n        <Alert message=\"这是React18子应用作为主应用，挂载Vue2子应用或Vite子应用\" type=\"success\" />\n        <Form>\n          <Form.Item label=\"选择要加载的子应用页面\">\n            <Cascader\n              style={{ width: '400px'}}\n              expandTrigger=\"hover\"\n              options={options}\n              fieldNames={{label: 'name', value: 'path'}}\n              onChange={handleChange}\n            />\n          </Form.Item>\n        </Form>\n        {microInfo && <WujieReact {...microInfo} props={props} afterMount={afterMount} />}\n      </Space>\n    </>\n  )\n}\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","router","setupApp","WujieReact","bus","vue2AppEntry","process","viteAppEntry","apps","vue2App","name","url","activeRule","viteApp","options","path","children","window","$wujie","props","MicroAppView","user","state","useState","microInfo","setMicroInfo","size","style","width","direction","message","type","label","expandTrigger","fieldNames","value","onChange","app","afterMount","$emit","Object","values","forEach","item","attrs","src"],"sourceRoot":""}