{"version":3,"file":"static/js/997.6f7c67c2.chunk.js","mappings":"mNAGaA,EAAoCC,EAAAA,GACpCC,EAAkDC,EAAAA,E,8RCClDC,EAAeC,mEACfC,EAAeD,mEAEtBE,EAA4B,CAChCC,QAAS,CACPC,KAAM,iBACNC,MAAON,EACPO,WAAY,YAEdC,QAAS,CACPH,KAAM,iBACNC,MAAOJ,EACPK,WAAY,aAIVE,EAAU,CACd,CACEJ,KAAM,UACNK,KAAM,UACNC,SAAU,CACR,CAAEN,KAAM,+CAAkBK,KAAM,uBAChC,CAAEL,KAAM,iEAAqBK,KAAM,oBAGvC,CACEL,KAAM,UACNK,KAAM,UACNC,SAAW,CACT,CAAEN,KAAM,+CAAkBK,KAAM,uBAChC,CAAEL,KAAM,iEAAqBK,KAAM,qBAKrCE,EAA6B,KAElB,SAASC,IACtB,IAAQC,GAAShB,EAAAA,EAAAA,IAAe,SAAAiB,GAAK,OAAIA,EAAMD,IAAV,IAA7BA,KACFE,GAAYC,EAAAA,EAAAA,QAAO,MACzB,GAA8BC,EAAAA,EAAAA,UAKpB,MALV,eAAOC,EAAP,KAAgBC,EAAhB,KAOMC,EAAY,yCAAG,WAAOC,GAAP,4FACOA,EADP,GACXC,EADW,KACFb,EADE,MAEbS,EAAUhB,EAAKoB,KAEnBH,EAAW,CACTf,KAAMc,EAAQd,KACdC,MAAOa,EAAQb,MACfkB,SAAU,IAAML,EAAQd,KACxBK,KAAAA,IARe,2CAAH,sDAqClB,OAvBAe,EAAAA,EAAAA,YAAU,WAkBR,OAjBA,uBAAC,+FACKN,EADL,uBAESV,EAAqD,CACzDiB,UAAW,kBAAMV,EAAUW,OAAhB,EACXrB,MAAOa,EAAQb,MACfkB,SAAUL,EAAQK,SAClBI,MAAO,CACLlB,KAAMS,EAAQT,OAGD,mBAAjBS,EAAQd,OAA8BI,EAAQoB,SAAU,GAV3D,SAWeC,EAAAA,GAAAA,QAAgBX,EAAQd,KAAMI,GAX7C,cAWGG,EAXH,0BAYSA,SAZT,aAYS,EAAKmB,QAZd,OAcGC,OAAOF,QAAQG,QAAQC,KAAK,WAAYpB,GAd3C,0CAAD,GAiBO,WAAO,IAAD,EACR,QAAH,EAAAF,SAAA,SAAKuB,SACN,CACF,GAAE,CAAChB,EAASL,KAGX,+BACE,qBAAOsB,KAAM,GAAIC,MAAO,CAAEC,MAAO,QAASC,UAAU,WAApD,WACE,oBAAOC,QAAQ,0IAAsCC,KAAK,aAC1D,wBACE,mBAAWC,MAAM,qEAAjB,UACE,cACEL,MAAO,CAAEC,MAAO,SAChBK,cAAc,QACdlC,QAASA,EACTmC,WAAY,CAACF,MAAO,OAAQpB,MAAO,QACnCuB,SAAUxB,SAIhB,gBAAKyB,IAAK9B,QAIjB,C","sources":["stores/storeHooks.ts","views/MicroAppView/index.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useAppSelector } from '@/stores/storeHooks'\nimport { Alert, Cascader, Form, Space } from 'antd'\nimport Garfish, {  type interfaces } from 'garfish'\nimport { useEffect, useRef, useState } from 'react'\n\nexport const vue2AppEntry = process.env.REACT_APP_VUE2_CHILD_PUBLIC_PATH\nexport const viteAppEntry = process.env.REACT_APP_VITE_CHILD_PUBLIC_PATH\n\nconst apps: Record<string, any> = {\n  vue2App: {\n    name: 'vue2AppOfReact',\n    entry: vue2AppEntry,\n    activeRule: '/vue2App',\n  },\n  viteApp: {\n    name: 'viteAppOfReact',\n    entry: viteAppEntry,\n    activeRule: '/viteApp',\n  },\n}\n\nconst options = [\n  {\n    name: 'vue2App',\n    path: 'vue2App',\n    children: [\n      { name: 'vue2App-通信测试页面', path: '/communication-test' },\n      { name: 'vue2App-子应用跳转测试页面', path: '/navigate-view' },\n    ]\n  },\n  {\n    name: 'viteApp',\n    path: 'viteApp',\n    children:  [\n      { name: 'viteApp-通信测试页面', path: '/communication-test' },\n      { name: 'viteApp-子应用跳转测试页面', path: '/navigate-view' },\n    ]\n  }\n]\n\nlet app: null | interfaces.App = null\n\nexport default function MicroAppView() {\n  const { user } = useAppSelector(state => state.user)\n  const container = useRef(null)\n  const [appInfo, setAppInfo] = useState<{\n    name: string\n    entry: string\n    basename: string\n    path: string\n  } | null>(null)\n\n  const handleChange = async (value: any) => {\n    const [ appName, path ] = value\n    const appInfo = apps[appName]\n    if (appInfo) {\n      setAppInfo({\n        name: appInfo.name,\n        entry: appInfo.entry,\n        basename: '/' + appInfo.name,\n        path\n      })\n    }\n  }\n\n\n  useEffect(() => {\n    (async () => {\n      if (appInfo) {\n        const options: Partial<Omit<interfaces.AppInfo, 'name'>> = {\n          domGetter: () => container.current,\n          entry: appInfo.entry,\n          basename: appInfo.basename,\n          props: {\n            path: appInfo.path\n          }\n        }\n        appInfo.name === 'viteAppOfReact' && (options.sandbox = false)\n        app = await Garfish.loadApp(appInfo.name, options)\n        await app?.mount()\n        // 下发用户信息\n        window.Garfish.channel.emit('userInfo', user)\n      }\n    })()\n    return () => {\n      app?.unmount()\n    }\n  }, [appInfo, user])\n\n  return (\n    <>\n      <Space size={20} style={{ width: '100%'}} direction=\"vertical\">\n        <Alert message=\"这是React18子应用作为主应用，挂载Vue2子应用或Vite子应用\" type=\"success\" />\n        <Form>\n          <Form.Item label=\"选择要加载的子应用页面\">\n            <Cascader\n              style={{ width: '400px'}}\n              expandTrigger=\"hover\"\n              options={options}\n              fieldNames={{label: 'name', value: 'path'}}\n              onChange={handleChange}\n            />\n          </Form.Item>\n        </Form>\n        <div ref={container}></div>\n      </Space>\n    </>\n  )\n}\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","vue2AppEntry","process","viteAppEntry","apps","vue2App","name","entry","activeRule","viteApp","options","path","children","app","MicroAppView","user","state","container","useRef","useState","appInfo","setAppInfo","handleChange","value","appName","basename","useEffect","domGetter","current","props","sandbox","Garfish","mount","window","channel","emit","unmount","size","style","width","direction","message","type","label","expandTrigger","fieldNames","onChange","ref"],"sourceRoot":""}