{"version":3,"file":"static/js/997.f2fd9cb2.chunk.js","mappings":"+NAGaA,EAAoCC,EAAAA,GACpCC,EAAkDC,EAAAA,E,wSCIlDC,EAAeC,sEACfC,EAAeD,sEAQtBE,EAAiC,CACrCC,SAAU,CACRC,KAAM,WACNC,IAAKN,EACLO,UAAW,YAEbC,QAAS,CACPH,KAAM,UACNC,IAAKJ,EACLK,UAAW,aAITE,EAAU,CACd,CACEJ,KAAM,UACNK,KAAM,WACNC,SAAU,CACR,CAAEN,KAAM,+CAAkBK,KAAM,+BAChC,CAAEL,KAAM,iEAAqBK,KAAM,6BAa1B,SAASE,IAAgB,IAAD,IACrC,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAQC,EAAR,KAAgBC,EAAhB,KACMC,GAAOlB,EAAAA,EAAAA,IAAe,SAAAmB,GAAK,OAAIA,EAAMD,KAAKA,IAAf,IACjC,GAAwBH,EAAAA,EAAAA,UAA0B,MAAlD,eAAQK,EAAR,KAAaC,EAAb,KACA,GAA0CN,EAAAA,EAAAA,UAAS,CACjDG,KAAAA,EACAN,KAAM,GACNU,UAAU,EACVC,OAAM,UAAEC,cAAF,iBAAE,EAAQC,SAASC,iBAAnB,aAAE,EAA4BH,SAJtC,eAAQI,EAAR,KAAsBC,EAAtB,KAOMC,EAAY,yCAAG,WAAOC,GAAP,0FACQA,EADR,GACZC,EADY,KACHC,EADG,KAEfD,GAAWC,IACbf,EAAsB,YAAZc,GACVV,EAAOhB,EAAK0B,IACZH,GAAgB,SAAAK,GAAG,yBACdA,GADc,IAEjBrB,KAAMoB,GAFW,KALF,2CAAH,sDAYlB,OACE,eACE,eAAOE,KAAM,GAAIC,MAAO,CAAEC,MAAO,QAASC,UAAU,YAClD,eAAOC,QACL,mIAAiC,eAAjC,mRACAC,KAAK,YACP,aACE,cAAWC,MAAM,sEACf,SACEL,MAAO,CAAEC,MAAO,SAChBK,cAAc,QACd9B,QAASA,EACT+B,WAAY,CAACF,MAAO,OAAQV,MAAO,QACnCa,SAAUd,MAKdT,GACA,iBACEb,KAAMa,EAAIb,KACVC,IAAKY,EAAIZ,IACTC,UAAWW,EAAIX,UACfmC,KAAMjB,EACNkB,OAAQ7B,EACR8B,eAAgB9B,EAChB+B,SAAS,KAMpB,C","sources":["stores/storeHooks.ts","views/MicroAppView/index.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","/** @jsxRuntime classic */\n/** @jsx jsxCustomEvent */\nimport jsxCustomEvent from '@micro-zoe/micro-app/polyfill/jsx-custom-event'\nimport { Alert, Cascader, Form, Space } from 'antd'\nimport { useState } from 'react'\nimport { useAppSelector } from '@/stores/storeHooks'\nimport microApp from '@micro-zoe/micro-app'\n\nexport const vue2AppEntry = process.env.REACT_APP_VUE2_CHILD_PUBLIC_PATH as string\nexport const viteAppEntry = process.env.REACT_APP_VITE_CHILD_PUBLIC_PATH as string\n\ninterface MicroApp {\n  name: string\n  url: string\n  baseroute: string\n}\n\nconst apps: Record<string, MicroApp> = {\n  vue2App2: {\n    name: 'vue2App2',\n    url: vue2AppEntry,\n    baseroute: '/vue2App',\n  },\n  viteApp: {\n    name: 'viteApp',\n    url: viteAppEntry,\n    baseroute: '/viteApp',\n  },\n}\n\nconst options = [\n  {\n    name: 'vue2App',\n    path: 'vue2App2',\n    children: [\n      { name: 'vue2App-通信测试页面', path: '/vue2App/communication-test' },\n      { name: 'vue2App-子应用跳转测试页面', path: '/vue2App/navigate-view' },\n    ]\n  },\n  // {\n  //   name: 'viteApp',\n  //   path: 'viteApp',\n  //   children:  [\n  //     { name: 'viteApp-通信测试页面', path: '/viteApp/communication-test' },\n  //     { name: 'viteApp-子应用跳转测试页面', path: '/viteApp/navigate-view' },\n  //   ]\n  // }\n]\n\nexport default function MicroAppView() {\n  const [ isVite, setIsVite ] = useState(false)\n  const user = useAppSelector(state => state.user.user)\n  const [ app, setApp ] = useState<MicroApp | null>(null)\n  const [ microAppData, setMicroAppData ] = useState({\n    user,\n    path: '',\n    abstract: true,\n    router: window?.microApp.getData()?.router // 下发主应用的路由对象\n  })\n\n  const handleChange = async (value: any) => {\n    const [appName, appPath] = value\n    if (appName && appPath) {\n      setIsVite(appName === 'viteApp')\n      setApp(apps[appName])\n      setMicroAppData(pre => ({\n        ...pre,\n        path: appPath,\n      }))\n    }\n  }\n\n  return (\n    <div>\n      <Space size={20} style={{ width: '100%'}} direction=\"vertical\">\n        <Alert message={\n          <div>这是React18子应用作为主应用，挂载Vue2子应用。<br />由于vite子应用会导致沙箱失效，会导致React18子应用中的样式影响到vite子应用，所以这里不再加载vite子应用。</div>\n        } type=\"success\" />\n        <Form>\n          <Form.Item label=\"选择要加载的子应用页面\">\n            <Cascader\n              style={{ width: '400px'}}\n              expandTrigger=\"hover\"\n              options={options}\n              fieldNames={{label: 'name', value: 'path'}}\n              onChange={handleChange}\n            />\n          </Form.Item>\n        </Form>\n        {\n          app && \n          <micro-app\n            name={app.name}\n            url={app.url}\n            baseroute={app.baseroute}\n            data={microAppData}\n            inline={isVite}\n            disableSandbox={isVite}\n            destroy={true}\n          />\n        }\n      </Space>\n    </div>\n  )\n}\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","vue2AppEntry","process","viteAppEntry","apps","vue2App2","name","url","baseroute","viteApp","options","path","children","MicroAppView","useState","isVite","setIsVite","user","state","app","setApp","abstract","router","window","microApp","getData","microAppData","setMicroAppData","handleChange","value","appName","appPath","pre","size","style","width","direction","message","type","label","expandTrigger","fieldNames","onChange","data","inline","disableSandbox","destroy"],"sourceRoot":""}